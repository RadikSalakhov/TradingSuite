@using BlazorApp.Client.Entities;
@using BlazorApp.Client.Services;
@using BlazorApp.Client.Abstraction;

@implements IDisposable

@inject IClientCacheService ClientCacheService

<div class="ts-container">
    <div class="ts-item-environment">
        PRD
    </div>
    <div class="ts-item-time">
        @ClientCacheService.ServerTime.Get().ServerTime.ToString("HH:mm:ss")
    </div>
    <div class="ts-item-usdt-info">
        500 / 5000
    </div>
    <div class="ts-item-uncommited-pnl">
        -100
    </div>
</div>

@code{

    protected override void OnInitialized()
    {
        base.OnInitialized();

        ClientCacheService.ServerTime.Updated += client_Updated;
    }

    public void Dispose()
    {
        ClientCacheService.ServerTime.Updated -= client_Updated;
    }

    private async Task client_Updated(ServerTimeEntity? serverTime)
    {
        await InvokeAsync(StateHasChanged);
    }
}