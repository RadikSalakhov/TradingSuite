apiVersion: v1
kind: Service
metadata:
  name: binance-worker-service
spec:
  selector:
    app: binance-worker
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: binance-worker-port-grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: binance-worker-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: binance-worker
  template:
    metadata:
      labels:
        app: binance-worker
    spec:
      containers:
        - name: binance-worker
          image: radiksalakhov/ts-binance-worker:1.0.0.0
          imagePullPolicy: Always
          env:
            - name: DOTNET_ENVIRONMENT
              value: Development
            - name: Kestrel__Endpoints__GRPC__Url
              value: http://0.0.0.0:80
            - name: Kestrel__Endpoints__GRPC__Protocols
              value: Http2
            - name: ConnectionStrings__EventBus
              value: 'rabbitmq-service.default'
            - name: BinanceOptions__BinanceApiKey
              valueFrom:
                configMapKeyRef:
                  name: secret-config-map
                  key: BinanceOptions__BinanceApiKey              
            - name: BinanceOptions__BinanceApiSecret
              valueFrom:
                configMapKeyRef:
                  name: secret-config-map
                  key: BinanceOptions__BinanceApiSecret
            
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: binance-worker-service
# spec:
#   selector:
#     app: binance-worker
#   type: ClusterIP  
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: taapi-worker-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: taapi-worker
  template:
    metadata:
      labels:
        app: taapi-worker
    spec:
      containers:
        - name: taapi-worker
          image: radiksalakhov/ts-taapi-worker:1.0.0.0
          imagePullPolicy: Always
          env:
            - name: DOTNET_ENVIRONMENT
              value: Development
            - name: ConnectionStrings__EventBus
              value: 'rabbitmq-service.default'
            - name: TaApiOptions__TaApiKey
              valueFrom:
                configMapKeyRef:
                  name: secret-config-map
                  key: TaApiOptions__TaApiKey
---
apiVersion: v1
kind: Service
metadata:
  name: assets-api-service
spec:
  selector:
    app: assets-api
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: assets-api-port-http
    # - protocol: TCP
    #   port: 443
    #   targetPort: 443
    #   name: assets-api-port-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: assets-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assets-api
  template:
    metadata:
      labels:
        app: assets-api
    spec:
      containers:
        - name: assets-api
          image: radiksalakhov/assets-api:1.0.0.0
          imagePullPolicy: Always
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ASPNETCORE_URLS
              value: http://0.0.0.0:80
              #value: http://0.0.0.0:80;https://0.0.0.0:443            
            - name: ConnectionStrings__EventBus
              value: 'rabbitmq-service.default'
            - name: AssetsAPIOptions__BinanceWorkerApiGrpc
              value: 'http://binance-worker.default:80'
---
apiVersion: v1
kind: Service
metadata:
  name: ticker-signalrhub-service
spec:
  selector:
    app: ticker-signalrhub
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: ticker-signalrhub-port-http
    # - protocol: TCP
    #   port: 443
    #   targetPort: 443
    #   name: blazorapp-port-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ticker-signalrhub-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticker-signalrhub
  template:
    metadata:
      labels:
        app: ticker-signalrhub
    spec:
      containers:
        - name: ticker-signalrhub
          image: radiksalakhov/ts-ticker-signalrhub:1.0.0.0
          imagePullPolicy: Always
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ASPNETCORE_URLS
              value: http://0.0.0.0:80
              #value: http://0.0.0.0:80;https://0.0.0.0:443
            - name: ConnectionStrings__EventBus
              value: 'rabbitmq-service.default'
---
apiVersion: v1
kind: Service
metadata:
  name: blazorapp-service
spec:
  selector:
    app: blazorapp
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: blazorapp-port-http
    # - protocol: TCP
    #   port: 443
    #   targetPort: 443
    #   name: blazorapp-port-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blazorapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blazorapp
  template:
    metadata:
      labels:
        app: blazorapp
    spec:
      containers:
        - name: blazorapp
          image: radiksalakhov/ts-blazorapp:1.0.0.0
          imagePullPolicy: Always
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ASPNETCORE_URLS
              value: http://0.0.0.0:80
              #value: http://0.0.0.0:80;https://0.0.0.0:443
            - name: ConnectionStrings__EventBus
              value: 'rabbitmq-service.default'
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service  
spec:
  selector:
    app: gateway
  type: LoadBalancer
  loadBalancerIP: 195.20.246.216
  ports:        
    - protocol: TCP
      port: 80
      targetPort: 8000
      name: gateway-port
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: gateway-admin-port    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: radiksalakhov/ts-gateway:1.0.0.0
          imagePullPolicy: Always
